{"ast":null,"code":"export default {\n  name: 'ComicCard',\n  props: {\n    comic: Object,\n    wishlist: {\n      type: Array,\n      default: () => [] // Ensure default is an empty array\n    }\n  },\n  computed: {\n    comicImage() {\n      return this.comic.photo ? `data:image/jpeg;base64,${this.comic.photo}` : 'https://via.placeholder.com/150';\n    },\n    authorsList() {\n      return this.comic.authors.map(author => {\n        const initial = author.name.firstName.charAt(0).toUpperCase();\n        return `${initial}. ${author.name.lastName}`;\n      }).join(', ');\n    },\n    isFavorite() {\n      if (!Array.isArray(this.wishlist)) {\n        return false;\n      }\n      const isInWishlist = this.wishlist.some(item => item.sku === this.comic.sku);\n      console.log(`Comic SKU: ${this.comic.sku} - Is in Wishlist: ${isInWishlist}`);\n      return isInWishlist;\n    }\n  },\n  methods: {\n    formatPrice(price) {\n      return `R${price.toFixed(2)}`;\n    },\n    handleAddToCart() {\n      this.$emit('add-to-cart', this.comic.sku); // Emit the comic SKU (or ID)\n    },\n    toggleWishlist() {\n      this.$emit('toggle-wishlist', this.comic.sku); // Emit the comic SKU for wishlist toggle\n    }\n  }\n};","map":{"version":3,"names":["name","props","comic","Object","wishlist","type","Array","default","computed","comicImage","photo","authorsList","authors","map","author","initial","firstName","charAt","toUpperCase","lastName","join","isFavorite","isArray","isInWishlist","some","item","sku","console","log","methods","formatPrice","price","toFixed","handleAddToCart","$emit","toggleWishlist"],"sources":["C:\\Users\\PC\\Documents\\javaApplications\\My_comic_city_project_0.2\\src\\frontend\\src\\components\\ComicCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"comic-card\">\r\n    <img :src=\"comicImage\" alt=\"Comic Cover\" class=\"comic-image\" />\r\n    <div\r\n        class=\"heart-icon\"\r\n        :class=\"{ 'active': isFavorite }\"\r\n        @click=\"toggleWishlist\"\r\n    >\r\n      <font-awesome-icon icon=\"heart\" />\r\n    </div>\r\n    <div class=\"comic-info\">\r\n      <div class=\"title-price\">\r\n        <h3 class=\"book-title\">{{ comic.name }}</h3>\r\n        <p class=\"price\">{{ formatPrice(comic.price) }}</p>\r\n      </div>\r\n      <p class=\"author\">{{ authorsList }}</p>\r\n      <div class=\"star-rating\">\r\n        <span v-for=\"n in 5\" :key=\"n\" class=\"star\">â˜…</span>\r\n      </div>\r\n      <button class=\"add-btn\" @click=\"handleAddToCart\">\r\n        + Add <font-awesome-icon icon=\"shopping-cart\" class=\"icon\" />\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ComicCard',\r\n  props: {\r\n    comic: Object,\r\n    wishlist: {\r\n      type: Array,\r\n      default: () => []  // Ensure default is an empty array\r\n    }\r\n  },\r\n  computed: {\r\n    comicImage() {\r\n      return this.comic.photo\r\n          ? `data:image/jpeg;base64,${this.comic.photo}`\r\n          : 'https://via.placeholder.com/150';\r\n    },\r\n    authorsList() {\r\n      return this.comic.authors\r\n          .map((author) => {\r\n            const initial = author.name.firstName.charAt(0).toUpperCase();\r\n            return `${initial}. ${author.name.lastName}`;\r\n          })\r\n          .join(', ');\r\n    },\r\n    isFavorite() {\r\n      if (!Array.isArray(this.wishlist)) {\r\n        return false;\r\n      }\r\n      const isInWishlist = this.wishlist.some((item) => item.sku === this.comic.sku);\r\n      console.log(`Comic SKU: ${this.comic.sku} - Is in Wishlist: ${isInWishlist}`);\r\n      return isInWishlist;\r\n    }\r\n  },\r\n  methods: {\r\n    formatPrice(price) {\r\n      return `R${price.toFixed(2)}`;\r\n    },\r\n    handleAddToCart() {\r\n      this.$emit('add-to-cart', this.comic.sku); // Emit the comic SKU (or ID)\r\n    },\r\n    toggleWishlist() {\r\n      this.$emit('toggle-wishlist', this.comic.sku); // Emit the comic SKU for wishlist toggle\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n/* Your existing styles */\r\n.comic-card {\r\n  position: relative;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  width: 300px;\r\n  height: 480px; /* Adjusted height for more space */\r\n  box-sizing: border-box;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.comic-card:hover {\r\n  transform: translateY(-10px);\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.comic-image {\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n}\r\n\r\n.heart-icon {\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  font-size: 30px;\r\n  color: rgba(0, 0, 0, 0.38); /* Default icon color */\r\n  background-color: white; /* Transparent background */\r\n  border-radius: 50%; /* Circular border */\r\n  padding: 4px; /* Padding for the border */\r\n  box-sizing: content-box;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.heart-icon.active {\r\n  color: red; /* Red color for active state */\r\n}\r\n\r\n.heart-icon:hover {\r\n  color: red;\r\n}\r\n\r\n.comic-info {\r\n  margin-top: 10px;\r\n  flex-grow: 1; /* Makes the info section take up remaining space */\r\n}\r\n\r\n.title-price {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.book-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  flex: 1 1 auto;\r\n  word-wrap: break-word;\r\n  max-width: 70%;\r\n}\r\n\r\n.price {\r\n  font-size: 16px;\r\n  margin-left: 10px;\r\n  text-align: right;\r\n  white-space: nowrap;\r\n}\r\n\r\n.author {\r\n  font-size: 14px;\r\n  margin: 8px 0;\r\n}\r\n\r\n.star-rating {\r\n  font-size: 16px;\r\n  color: #af751c;\r\n  margin: 8px 0;\r\n}\r\n\r\n.star {\r\n  margin-right: 2px;\r\n}\r\n\r\n.add-btn {\r\n  background-color: #fca311;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n  border-radius: 6px;\r\n  height: 40px;\r\n  width: 168px;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n  align-self: center; /* Center the button horizontally */\r\n  margin-bottom: 20px; /* Add space below the button */\r\n  margin: 20px auto 0 auto; /* Center the button horizontally */\r\n  display: block;\r\n}\r\n\r\n.add-btn .icon {\r\n  margin-left: 10px;\r\n}\r\n\r\n.add-btn:hover {\r\n  background-color: #af751c;\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM,EAAC,CAAG;IACrB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACP,KAAK,CAACQ,KAAI,GAChB,0BAA0B,IAAI,CAACR,KAAK,CAACQ,KAAK,EAAC,GAC3C,iCAAiC;IACzC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACT,KAAK,CAACU,OAAM,CACnBC,GAAG,CAAEC,MAAM,IAAK;QACf,MAAMC,OAAM,GAAID,MAAM,CAACd,IAAI,CAACgB,SAAS,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC7D,OAAO,GAAGH,OAAO,KAAKD,MAAM,CAACd,IAAI,CAACmB,QAAQ,EAAE;MAC9C,CAAC,EACAC,IAAI,CAAC,IAAI,CAAC;IACjB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACf,KAAK,CAACgB,OAAO,CAAC,IAAI,CAAClB,QAAQ,CAAC,EAAE;QACjC,OAAO,KAAK;MACd;MACA,MAAMmB,YAAW,GAAI,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAE,KAAM,IAAI,CAACxB,KAAK,CAACwB,GAAG,CAAC;MAC9EC,OAAO,CAACC,GAAG,CAAC,cAAc,IAAI,CAAC1B,KAAK,CAACwB,GAAG,sBAAsBH,YAAY,EAAE,CAAC;MAC7E,OAAOA,YAAY;IACrB;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAE;MACjB,OAAO,IAAIA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC/B,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAChC,KAAK,CAACwB,GAAG,CAAC,EAAE;IAC7C,CAAC;IACDS,cAAcA,CAAA,EAAG;MACf,IAAI,CAACD,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAChC,KAAK,CAACwB,GAAG,CAAC,EAAE;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}