{"ast":null,"code":"import NavBar from '@/components/NavBar.vue';\nimport HeroSection from '@/components/HeroSection.vue';\nimport ProductGrid from '@/components/ProductGrid.vue';\nimport FooterSection from '@/components/FooterSection.vue';\nimport { getAllComicBooks } from '@/services/comicBookService';\nimport { addBookToCart } from '@/services/cartService';\nimport { addBookToWishList } from '@/services/wishlistService';\nexport default {\n  name: 'HomePage',\n  components: {\n    NavBar,\n    HeroSection,\n    ProductGrid,\n    FooterSection\n  },\n  data() {\n    return {\n      newArrivals: [],\n      hotPicks: [],\n      wishlist: [],\n      cartId: '2',\n      // Replace with the actual cart ID\n      loading: true,\n      error: null\n    };\n  },\n  created() {\n    this.fetchComicBooks();\n  },\n  methods: {\n    async fetchComicBooks() {\n      try {\n        const response = await getAllComicBooks();\n        const allComics = response.data;\n\n        // Split comics between new arrivals and hot picks\n        this.newArrivals = allComics.slice(0, 5);\n        this.hotPicks = allComics.slice(5, 10);\n        this.loading = false;\n      } catch (error) {\n        this.error = 'Failed to load comic books.';\n        this.loading = false;\n      }\n    },\n    async addToCart(sku) {\n      try {\n        await addBookToCart(this.cartId, sku); // Send the correct SKU to the API\n        alert('Comic added to cart!');\n      } catch (error) {\n        alert('Failed to add comic to cart.');\n      }\n    },\n    async toggleWishlist(sku) {\n      try {\n        // Call wishlist service to toggle the comic in the wishlist\n        const updatedWishlist = await addBookToWishList(1, sku); // Adjust as per your service\n        this.wishlist = updatedWishlist.comicBooks; // Update the local wishlist\n        alert('Comic added to WishList!');\n      } catch (error) {\n        alert('Failed to update wishlist.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","HeroSection","ProductGrid","FooterSection","getAllComicBooks","addBookToCart","addBookToWishList","name","components","data","newArrivals","hotPicks","wishlist","cartId","loading","error","created","fetchComicBooks","methods","response","allComics","slice","addToCart","sku","alert","toggleWishlist","updatedWishlist","comicBooks"],"sources":["C:\\Users\\PC\\Documents\\javaApplications\\My_comic_city_project_0.2\\src\\frontend\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div id=\"home-page\">\r\n    <NavBar />\r\n    <HeroSection />\r\n    <ProductGrid title=\"New Arrivals\" :comics=\"newArrivals\" :wishlist=\"wishlist\" @add-to-cart=\"addToCart\" @toggle-wishlist=\"toggleWishlist\" />\r\n    <ProductGrid title=\"Hot Picks\" :comics=\"hotPicks\" :wishlist=\"wishlist\" @add-to-cart=\"addToCart\" @toggle-wishlist=\"toggleWishlist\" />\r\n    <FooterSection />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from '@/components/NavBar.vue';\r\nimport HeroSection from '@/components/HeroSection.vue';\r\nimport ProductGrid from '@/components/ProductGrid.vue';\r\nimport FooterSection from '@/components/FooterSection.vue';\r\nimport { getAllComicBooks } from '@/services/comicBookService';\r\nimport { addBookToCart } from '@/services/cartService';\r\nimport { addBookToWishList } from '@/services/wishlistService';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    NavBar,\r\n    HeroSection,\r\n    ProductGrid,\r\n    FooterSection\r\n  },\r\n  data() {\r\n    return {\r\n      newArrivals: [],\r\n      hotPicks: [],\r\n      wishlist: [],\r\n      cartId: '2', // Replace with the actual cart ID\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchComicBooks();\r\n  },\r\n  methods: {\r\n    async fetchComicBooks() {\r\n      try {\r\n        const response = await getAllComicBooks();\r\n        const allComics = response.data;\r\n\r\n        // Split comics between new arrivals and hot picks\r\n        this.newArrivals = allComics.slice(0, 5);\r\n        this.hotPicks = allComics.slice(5, 10);\r\n\r\n        this.loading = false;\r\n      } catch (error) {\r\n        this.error = 'Failed to load comic books.';\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async addToCart(sku) {\r\n      try {\r\n        await addBookToCart(this.cartId, sku); // Send the correct SKU to the API\r\n        alert('Comic added to cart!');\r\n      } catch (error) {\r\n        alert('Failed to add comic to cart.');\r\n      }\r\n    },\r\n    async toggleWishlist(sku) {\r\n      try {\r\n        // Call wishlist service to toggle the comic in the wishlist\r\n        const updatedWishlist = await addBookToWishList(1, sku); // Adjust as per your service\r\n        this.wishlist = updatedWishlist.comicBooks; // Update the local wishlist\r\n        alert('Comic added to WishList!');\r\n      } catch (error) {\r\n        alert('Failed to update wishlist.');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles scoped to HomePage */\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n</style>\r\n"],"mappings":"AAWA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,aAAY,MAAO,gCAAgC;AAC1D,SAASC,gBAAe,QAAS,6BAA6B;AAC9D,SAASC,aAAY,QAAS,wBAAwB;AACtD,SAASC,iBAAgB,QAAS,4BAA4B;AAE9D,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVR,MAAM;IACNC,WAAW;IACXC,WAAW;IACXC;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,GAAG;MAAE;MACbC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMf,gBAAgB,CAAC,CAAC;QACzC,MAAMgB,SAAQ,GAAID,QAAQ,CAACV,IAAI;;QAE/B;QACA,IAAI,CAACC,WAAU,GAAIU,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAACV,QAAO,GAAIS,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAEtC,IAAI,CAACP,OAAM,GAAI,KAAK;MACtB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,6BAA6B;QAC1C,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACD,MAAMQ,SAASA,CAACC,GAAG,EAAE;MACnB,IAAI;QACF,MAAMlB,aAAa,CAAC,IAAI,CAACQ,MAAM,EAAEU,GAAG,CAAC,EAAE;QACvCC,KAAK,CAAC,sBAAsB,CAAC;MAC/B,EAAE,OAAOT,KAAK,EAAE;QACdS,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACF,CAAC;IACD,MAAMC,cAAcA,CAACF,GAAG,EAAE;MACxB,IAAI;QACF;QACA,MAAMG,eAAc,GAAI,MAAMpB,iBAAiB,CAAC,CAAC,EAAEiB,GAAG,CAAC,EAAE;QACzD,IAAI,CAACX,QAAO,GAAIc,eAAe,CAACC,UAAU,EAAE;QAC5CH,KAAK,CAAC,0BAA0B,CAAC;MACnC,EAAE,OAAOT,KAAK,EAAE;QACdS,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}